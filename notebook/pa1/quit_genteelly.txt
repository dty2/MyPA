优美退出：
1.上网查
2.
思考：为什么会不优美"退出"？ --->  退出的时候出了问题 ---> 一切的问题来源于代码 ---->找代码出了什么问题
思考：从代码的什么地方找起？---> 找main ---> 找到main的return，发现了return 一个函数（is_ex...）
思考：发现is函数（main return的那个函数），但是找遍main函数所在的文件，并没有发现is函数的定义，那么is函数在哪？--->  找is函数（本人于这里上网找教程，本来不想找，可是不由自主）
结果：
上网找教程 --->发现原来在util文件（好像是打对了）的is函数是返回了1 ---> 该函数返回1给main，main将1返回，那不就出错了呗， 即报错中的error1
只需要把good改成1就ok了

反思：为什么会找不到is函数？
原因就是不会用gdb，用gdb调试一调就出来了（至于我为什么会用gdb，但是结果还是没调出来，就是另一个问题了，详细见gdbtui问题）
那么再反思，为什么我main找到了？因为看讲义了，不看讲义再加上当时不会用gdb，估计这辈子也别想找到main，就算找到了，我估计也得怀疑这个是不是真的main

回忆：今天在进行pa1的时候发现，这个优美的退出不是把good改成1
而是将上面的初始化{.state = NEMU_STOP}修改成{.state = NEMU_QUIT}
这种做法是符合逻辑，符合最初设计初衷的，也是最优美的
